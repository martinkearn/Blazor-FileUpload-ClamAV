@page "/"
@inject IConfiguration Configuration

<h1>File Upload with BlazorInputFile and ClamAV/nClam</h1>

<p>This sample combines <a href="https://blog.stevensanderson.com/2019/09/13/blazor-inputfile/">BlazorInputFile</a> with <a href="https://github.com/tekmaven/nClam">nClam</a> to do a file upload with virus check against <a href="https://www.clamav.net/">ClamAV</a> server instance hosted via a <a href="https://hub.docker.com/r/filefrog/clamav">filefrog/clamav</a> Docker container.</p>

<InputFile OnChange="HandleFileSelected" />

@if (file != null)
{
    <p>Name: @file.Name</p>
    <p>Size in bytes: @file.Size</p>
    <p>Last modified date: @file.LastModified.ToShortDateString()</p>
    <p>Content type (not always supplied by the browser): @file.Type</p>
    <p>ClamAV scan status: @scanStatus</p>
}

@code {
    IFileListEntry file;
    string scanStatus;

    private async Task HandleFileSelected(IFileListEntry[] files)
    {
        file = files.FirstOrDefault();

        // Scan with nClam
        var serverName = Configuration["ClamAVServerName"];
        var clam = new ClamClient(serverName, 3310);
        var scanResult = await clam.SendAndScanFileAsync(file.Data);
        switch (scanResult.Result)
        {
            case ClamScanResults.Clean:
                scanStatus = $"File is clean according to {serverName}";
                break;
            case ClamScanResults.VirusDetected:
                scanStatus = $"File is infected according to {serverName}";
                break;
            case ClamScanResults.Error:
                scanStatus = $"File scan produced an error from {serverName}, {scanResult.RawResult}";
                break;
            case ClamScanResults.Unknown:
                scanStatus = $"File scan produced an unknown status from {serverName}, {scanResult.RawResult}";
                break;
        }
    }
}